// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @default(uuid())
  hash             String
  name             String
  email            String
  role             Role            @default(USER)
  writtenPosts     Post[]          @relation("writtenPosts")
  favouritePosts   Post[]          @relation("favouritePosts")
  createdAt        DateTime
  updatedAt        DateTime
  userPreference   UserPreference? @relation(fields: [userPreferenceId], references: [id])
  userPreferenceId String?         @unique
}

// e.g to gather if a user wants to subscribe to an email newsletter
model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User?
}

model Post {
  id             String     @id @default(uuid())
  title          String
  averageRating  Float
  author         User       @relation("writtenPosts", fields: [authorId], references: [id])
  authorId       String
  favouritedBy   User?      @relation("favouritePosts", fields: [favouritedById], references: [id])
  favouritedById String?
  categories     Category[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Category {
  id    String @id @default(uuid())
  posts Post[]
}

enum Role {
  USER
  ADMIN
  EDITOR
}
